{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","Poster","Title","Plot","imdbID","catch","Response","Error","FindMovie","onAdd","useState","setQuery","loadind","setLoading","loadedData","setLoadedData","isError","setIsError","newMovie","setNewMovie","loadData","a","newData","useEffect","newDataMovie","Object","values","every","el","undefined","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","length","onClick","App","setMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f382dce.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2e8b33c3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .then(res => ({\n      Poster: res.Poster !== 'N/A'\n        ? res.Poster\n        : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n      Title: res.Title,\n      Plot: res.Plot,\n      imdbID: res.imdbID,\n    }))\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [loadind, setLoading] = useState(false);\n  const [loadedData, setLoadedData]\n    = useState<MovieData | ResponseError | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      const newData = await getMovie(query);\n\n      setLoadedData(newData as MovieData);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    loadData();\n  };\n\n  useEffect(() => {\n    if (loadedData) {\n      const {\n        Title,\n        Poster,\n        Plot,\n        imdbID,\n      } = loadedData as MovieData;\n\n      const newDataMovie: Movie = {\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      };\n\n      switch (Object.values(loadedData).every(el => el === undefined)) {\n        case true:\n          setIsError(true);\n          break;\n\n        case false:\n          setNewMovie(newDataMovie);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [loadedData]);\n\n  useEffect(() => {\n    setIsError(false);\n  }, [query]);\n\n  const addNewMovie = (movie: Movie) => {\n    onAdd(movie);\n    setNewMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleSearch}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light', { 'is-loading': loadind },\n              )}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addNewMovie(newMovie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.find(el => el.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovie([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}